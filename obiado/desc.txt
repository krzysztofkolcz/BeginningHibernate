Spring Security:
websystique spring security
chyba te:
http://websystique.com/spring-security/spring-security-4-hibernate-annotation-example/
http://websystique.com/spring-security/spring-security-4-custom-login-form-annotation-example/

Formularz rejestracji:
http://www.baeldung.com/registration-with-spring-mvc-and-spring-security

liquibase:
/home/kkolcz/app/liquibase
liquibase.properties (jak liquibase.properties.example)
java -jar liquibase.jar migrate


Przykład annotacji:
http://www.mkyong.com/java/java-custom-annotations-example/


Przypisanie użytkownikowi roli - hibernate many-to-many:
http://websystique.com/springmvc/springmvc-hibernate-many-to-many-example-annotation-using-join-table/

Rejestracja działa.

Testy:
http://www.petrikainulainen.net/spring-mvc-test-tutorial/
https://springtestdbunit.github.io/spring-test-dbunit/
https://springtestdbunit.github.io/spring-test-dbunit/sample.html
http://www.marcphilipp.de/blog/2012/03/13/database-tests-with-dbunit-part-1/


Testy nie uwzględniają walidacji, np. dodając puste pole firstName przechodzi rejestracja.
Zmieniam hibernate validator z 5.1.2 na 5.2.4.Final. To rozwiązało problem

Walidacja pól formularzy:
http://www.disasterarea.co.uk/blog/mockmvc-to-test-spring-mvc-form-validation/

TODO - test dla zalogowanego administratora - mock

TODO - dokończyć setupowanie dbunita:
http://www.marcphilipp.de/blog/2012/03/13/database-tests-with-dbunit-part-1/
http://www.petrikainulainen.net/programming/spring-framework/integration-testing-of-spring-mvc-applications-controllers/
http://springtestdbunit.github.io/spring-test-dbunit/
http://www.mkyong.com/spring/spring-embedded-database-examples/
https://coderphil.wordpress.com/2012/04/23/database-testing-using-dbunit-spring-and-annotations/
http://docs.spring.io/spring/docs/3.1.x/spring-framework-reference/html/jdbc.html#jdbc-embedded-database-support
http://stackoverflow.com/questions/2012292/spring-configuration-for-embedded-h2-database-for-tests

Problem z session factory.
http://www.inspire-software.com/en/index/view/articles-design-and-impl-dbunit-hibernate-integration-testing.html

Run single test - https://maven.apache.org/surefire/maven-surefire-plugin/examples/single-test.html

Found interface org.springframework.test.context.TestContext, but class was expected
http://stackoverflow.com/questions/21016157/spring-4-found-interface-org-springframework-test-context-testcontext-but-cla
zmiana wersji na: 
  <artifactId>spring-test-dbunit</artifactId>
  <version>1.2.1</version>

org.hibernate.exception.SQLGrammarException: could not prepare statement

Prawdopodobnie niezsetupowana baza danych
http://stackoverflow.com/questions/9329283/how-to-initialize-in-memory-hsqldb-using-script-via-spring

Do przerobienia:
https://tillias.wordpress.com/2012/11/10/unit-testing-and-integration-testing-using-junit-liquibase-hsqldb-hibernate-maven-and-spring-framework/


Liquibase test:
Pobranie kontekstu:
http://stackoverflow.com/questions/2425015/how-to-access-spring-context-in-junit-tests-annotated-with-runwith-and-context

http://stackoverflow.com/questions/24219565/hsqldb-and-liquibase-table-already-exists-databasechangeloglock

DataSource:
https://docs.oracle.com/javase/tutorial/jdbc/basics/sqldatasources.html
http://www.liquibase.org/javadoc/liquibase/database/DatabaseConnection.html
http://www.liquibase.org/javadoc/liquibase/database/jvm/HsqlConnection.html

Properties:
http://www.baeldung.com/2012/02/06/properties-with-spring/


unit test - nie mogę się dostać do customer-panel-servlet.xml, aby zdefiniować w teście view resolver. Okazuje się, że jest to złe miejsce:
http://stackoverflow.com/questions/4377699/spring-contextconfiguration-how-to-put-the-right-location-for-the-xml
http://docs.spring.io/spring/docs/3.0.x/spring-framework-reference/html/resources.html#resources-app-ctx


TODO:
Dwa problemy - 
1. edycja usera przez admina (edit-user-{id}) nie powoduje zmian
2. dodanie usera z błędem (np. nie pasujące hasła) nie dodaje usera, ale nie wyświetla błędu

Tutaj jest przykład validacji, który nie działa:
http://www.baeldung.com/registration-with-spring-mvc-and-spring-security
Tutaj bardzo podobny przykład 
http://stackoverflow.com/questions/7239897/spring-3-annotation-based-validation-password-and-confirm-password
A tutaj lepiej wytłumaczone:
http://stackoverflow.com/questions/1972933/cross-field-validation-with-hibernate-validator-jsr-303


http://stackoverflow.com/questions/2781771/how-can-i-validate-two-or-more-fields-in-combination
http://in.relation.to/2008/03/25/bean-validation-sneak-peek-part-i/
http://in.relation.to/2008/04/01/bean-validation-sneak-peek-part-ii-custom-constraints/#H-ClasslevelConstraints


log4j
Dodaje log4j properties

dokumentacja testów mockmvc:
http://docs.spring.io/spring-security/site/docs/current/reference/html/test-mockmvc.html
